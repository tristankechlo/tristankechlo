name: Build and Publish Release

# only use this workflow when a new release is published
# this workflow assumes some variables that are only present on github releases

on:
  workflow_call:
    inputs:
      modid:
        required: true
        type: string
        description: used to locate the built jar-files
      mc-version:
        required: true
        type: string
        description: the minecraft version of the build, used for publishing to curseforge and modrinth
      mod-version:
        required: true
        type: string
        description: the version of the mod, used for publishing to curseforge and modrinth
      curseforge-id:
        required: true
        type: number
        description: the project id for the mod
      modrinth-id:
        required: true
        type: string
        description: the project id for the mod
      changelog:
        required: true
        type: string
        description: changelog that is added while publishing to curseforge and modrinth, supports markdown
      featured:
        required: false
        type: boolean
        default: true
        description: whether or not the file is marked as featured on modrinth, defaults to true
      forge:
        required: false
        type: boolean
        default: true
        description: whether or not the build has forge files, defaults to true
      fabric:
        required: false
        type: boolean
        default: true
        description: whether or not the build has fabric files, defaults to true
      neoforge:
        required: false
        type: boolean
        default: true
        description: whether or not the build has neoforge files, defaults to true
      version-range:
        required: true
        type: string
        description: what minecraft versions does this build support, used for curseforge and modrinth
    secrets:
      curseforge-token:
        required: true
      modrinth-token:
        required: true

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17
          cache: "gradle"
          cache-dependency-path: "gradle.properties"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Execute Gradle build
        run: ./gradlew build

      - name: copy jar-files
        shell: bash
        run: |
          mkdir ./dist
          if [ -d ./Forge/build/libs ]; then
            echo "Copying Forge jar-file"
            mv ./Forge/build/libs/${{ inputs.modid }}-*.jar ./dist
          fi

          if [ -d ./Fabric/build/libs ]; then
            echo "Copying Fabric jar-file"
            mv ./Fabric/build/libs/${{ inputs.modid }}-*.jar ./dist
          fi

          if [ -d ./Neoforge/build/libs ]; then
            echo "Copying Neoforge jar-file"
            mv ./Neoforge/build/libs/${{ inputs.modid }}-*.jar ./dist
          fi

          echo -e "$(ls -lahG ./dist)"

      - name: Add files to GitHub-Release
        uses: shogo82148/actions-upload-release-asset@v1.7.5
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./dist/${{ inputs.modid }}-*.jar"
          overwrite: true

      - name: publish NeoForge
        if: ${{ inputs.neoforge == true }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ inputs.modrinth-id }}
          modrinth-featured: ${{ inputs.featured }}
          modrinth-unfeature-mode: intersection
          modrinth-token: ${{ secrets.modrinth-token }}
          modrinth-name: ${{ inputs.mc-version }} - ${{ inputs.mod-version }} - NeoForge
          modrinth-version: ${{ inputs.mc-version }}-${{ inputs.mod-version }}-NeoForge
          curseforge-id: ${{ inputs.curseforge-id }}
          curseforge-token: ${{ secrets.curseforge-token }}
          curseforge-name: ""
          curseforge-version: ""
          version-type: release
          loaders: neoforge
          files: ./dist/*-neoforge-*jar
          changelog: ${{ inputs.changelog }}
          game-versions: ${{ inputs.version-range }}
          game-version-filter: releases

      - name: publish Fabric
        if: ${{ inputs.fabric == true }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ inputs.modrinth-id }}
          modrinth-featured: ${{ inputs.featured }}
          modrinth-unfeature-mode: intersection
          modrinth-token: ${{ secrets.modrinth-token }}
          modrinth-name: ${{ inputs.mc-version }} - ${{ inputs.mod-version }} - Fabric
          modrinth-version: ${{ inputs.mc-version }}-${{ inputs.mod-version }}-Fabric
          curseforge-id: ${{ inputs.curseforge-id }}
          curseforge-token: ${{ secrets.curseforge-token }}
          curseforge-name: ""
          curseforge-version: ""
          version-type: release
          loaders: fabric
          files: ./dist/*-fabric-*jar
          changelog: ${{ inputs.changelog }}
          game-versions: ${{ inputs.version-range }}
          dependencies: fabric-api(required)
          game-version-filter: releases

      - name: publish Forge
        if: ${{ inputs.forge == true }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ inputs.modrinth-id }}
          modrinth-featured: ${{ inputs.featured }}
          modrinth-unfeature-mode: intersection
          modrinth-token: ${{ secrets.modrinth-token }}
          modrinth-name: ${{ inputs.mc-version }} - ${{ inputs.mod-version }} - Forge
          modrinth-version: ${{ inputs.mc-version }}-${{ inputs.mod-version }}-Forge
          curseforge-id: ${{ inputs.curseforge-id }}
          curseforge-token: ${{ secrets.curseforge-token }}
          curseforge-name: ""
          curseforge-version: ""
          version-type: release
          loaders: forge
          files: ./dist/*-forge-*jar
          changelog: ${{ inputs.changelog }}
          game-versions: ${{ inputs.version-range }}
          game-version-filter: releases
